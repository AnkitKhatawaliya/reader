import 'package:flutter/material.dart';
import 'package:reader/Widgets/CustomCard.dart';
import 'package:reader/Widgets/Logout_BOX.dart';
import 'package:reader/Widgets/Over_Images.dart';
import 'package:reader/Widgets/Select_Class.dart';
import 'package:reader/Widgets/Teacher_card.dart';
import 'package:reader/Workflow/Base_URLs.dart';
import 'package:reader/homepage.dart';
import 'package:shared_preferences/shared_preferences.dart';

class TeacherHomePage extends StatefulWidget {
  const TeacherHomePage({super.key, required this.Teacher_HomePage});
  final List<dynamic> Teacher_HomePage;

  @override
  State<TeacherHomePage> createState() => _TeacherHomePageState();
}

class _TeacherHomePageState extends State<TeacherHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Welcome , ${widget.Teacher_HomePage[0]}"),
      ),
      body: SingleChildScrollView(
        scrollDirection: Axis.vertical,
        child: SizedBox(
          width: double.maxFinite,
          child: Column(
            children: [
              Stack(
                children: [
                  const Over_Images(),
                  Column(
                    children: [
                      SizedBox(
                        height: MediaQuery.of(context).size.height * 0.4,
                      ),
                      Row(
                        children: [
                          SizedBox(
                            width: MediaQuery.of(context).size.width * 0.1,
                          ),
                          SizedBox(
                            width: MediaQuery.of(context).size.width * 0.55,
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Text(
                                  "${widget.Teacher_HomePage[0]}",
                                  style: const TextStyle(
                                      fontWeight: FontWeight.bold,
                                      fontSize: 28),
                                ),
                                const Text(
                                  "Teacher",
                                  style: TextStyle(color: Colors.grey),
                                ),
                                SizedBox(
                                  height:
                                      MediaQuery.of(context).size.height * 0.01,
                                ),
                                SizedBox(
                                  width:
                                      MediaQuery.of(context).size.width * 0.30,
                                  child: Column(
                                    children: [
                                      Row(
                                        mainAxisAlignment:
                                            MainAxisAlignment.spaceBetween,
                                        children: [
                                          const Text("Primary Class"),
                                          Text(
                                              ": ${widget.Teacher_HomePage[3]} ${widget.Teacher_HomePage[4]}"),
                                        ],
                                      ),
                                      Row(
                                        mainAxisAlignment:
                                            MainAxisAlignment.spaceBetween,
                                        children: [
                                          const Text("Subject"),
                                          Text(
                                              ": ${widget.Teacher_HomePage[5]}"),
                                        ],
                                      )
                                    ],
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ],
                      )
                    ],
                  ),
                  Image.network(
                    "$Teacher_Base_url/Teacher_image/${widget.Teacher_HomePage[1]}",
                    width: double.maxFinite,
                    loadingBuilder: (BuildContext context, Widget child,
                        ImageChunkEvent? loadingProgress) {
                      if (loadingProgress == null) {
                        return child;
                      } else {
                        return Center(
                          child: CircularProgressIndicator(
                            value: loadingProgress.expectedTotalBytes != null
                                ? loadingProgress.cumulativeBytesLoaded /
                                    (loadingProgress.expectedTotalBytes ?? 1)
                                : null,
                          ),
                        );
                      }
                    },
                  ),
                ],
              ),
              CustomCardViewone(
                title: "Mark Attendance ",
                icon: Icons.app_registration,
                onTap: () {},
              ),
              CustomCardViewone(
                title: "Give HomeWork",
                icon: Icons.home_work_outlined,
                onTap: () async {
                  Map<String, String> selectedValues =
                      await Select_Class(context);
                  String selectedClass = selectedValues["class"] ?? "1";
                  String selectedSection = selectedValues["section"] ?? "A";
                  print(
                      "Selected Class: $selectedClass, Selected Section: $selectedSection");
                },
              ),
              CustomCardViewone(
                title: "Give Marks",
                icon: Icons.note_add_outlined,
                onTap: () async {
                  Map<String, String> selectedValues =
                      await Select_Class(context);
                  String selectedClass = selectedValues["class"] ?? "1";
                  String selectedSection = selectedValues["section"] ?? "A";
                  print(
                      "Selected Class: $selectedClass, Selected Section: $selectedSection");
                },
              ),
              CustomCardViewone(
                title: "See Attendance Records",
                icon: Icons.view_comfy_outlined,
                onTap: () {
                  print(widget.Teacher_HomePage[0]);
                },
              ),
              CustomCardViewone(
                title: "View Homework ",
                icon: Icons.app_registration,
                onTap: () async {
                  Map<String, String> selectedValues =
                      await Select_Class(context);
                  String selectedClass = selectedValues["class"] ?? "1";
                  String selectedSection = selectedValues["section"] ?? "A";
                  print(
                      "Selected Class: $selectedClass, Selected Section: $selectedSection");
                },
              ),
              CustomCardViewone(
                title: "View Marks ",
                icon: Icons.app_registration,
                onTap: () async {
                  Map<String, String> selectedValues =
                      await Select_Class(context);
                  String selectedClass = selectedValues["class"] ?? "1";
                  String selectedSection = selectedValues["section"] ?? "A";
                  print(
                      "Selected Class: $selectedClass, Selected Section: $selectedSection");
                },
              ),
              CustomCardViewone(
                  title: "See Schedule",
                  icon: Icons.library_books,
                  onTap: () {}),
              CustomCardViewone(
                  title: "Notices", icon: Icons.library_books, onTap: () {}),
              CustomCardViewone(
                title: "Log Out",
                icon: Icons.logout,
                onTap: () {
                  showDialog(
                    context: context,
                    builder: (BuildContext context) {
                      return Log_out(
                        onTap: () async {
                          SharedPreferences prefs =
                              await SharedPreferences.getInstance();
                          prefs.setBool("is_teacher_login", false);
                          Navigator.pushReplacement(
                              context,
                              MaterialPageRoute(
                                  builder: (context) => const Home_Screen()));
                        },
                      );
                    },
                  );
                },
              )
            ],
          ),
        ),
      ),
    );
  }
}
